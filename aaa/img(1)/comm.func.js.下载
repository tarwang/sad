/*公共js文件/
/**
 * User Agent
 * 判断用户来源终端
 */
var getUserAgent = function(){
	var ua = navigator.userAgent.toLowerCase();
	var data = {};
	//判断来源
	if(ua.match(/MicroMessenger/i)=="micromessenger"){
		return data= {'code':4,'message':'wx'};
	}else if(ua.match(/SQ/i)== "sq" ){
		return data= {'code':5,'message':'sq'};
	}else if(ua.match(/Windows/i)== "windows"){
		return data= {'code':1,'message':'pc'};
	}else if(ua.match(/yqhapp/i)== "yqhapp"){
		return data= {'code':3,'message':'app'};
	}else{
		return data= {'code':2,'message':'wap'};
	}
}


/**
 * 格式化替换空格前4位数字为4位数字加空格，包含字母：.replace(/\D/g, '')改为.replace(/ /g, '')
 */
var format_num  = function(t){
	if(isNaN(trims(t.value))){
		t.value = t.value.replace(/\D/g, '').replace(/....(?!$)/g, '$& ');
	}else{
		t.value = t.value.replace(/ /g, '').replace(/....(?!$)/g, '$& ');
	}
}

/**
 * 刷新验证码
 */
var changeCode = function(){  
     $("#yzm_img").attr('src','../verify/verify_image?r='+Math.random());  
}

/**
 * 页面跳转
 */
var jump = function(url,b){
	if(url){
		if(b==1){
			window.open(url);
		}else{
			window.location.href = url;	
		}
	}
}

/**
 * 判断图片是否在本站服务器
 */
var server_img = function(img){
	if(img.indexOf('http')>=0){
		return img;	
	}else{
		return pic_server+img;
	}
}

/**
 * 去掉字符串前后所有空格
 */
var trim = function(str){
	if(str){
		return str.replace(/(^\s*)|(\s*$)/g, ""); 
	}
}

/**
 * 去掉字符串中所有空格(包括中间空格)
 */
var trims = function(str){
	var result;
	if(str){
		result = str.replace(/(^\s+)|(\s+$)/g,"");
	    result = result.replace(/\s/g,"");
	    result =  result.replace(/&nbsp;/ig, "");
	    return result;
	}
}

/**
 * 去掉所有的html标记
 */
var delHtmlTag = function(str){  
	if(str){
		return str.replace(/<[^>]+>/g,"");	
	}
}

/**
 * js正则表达式 过滤特殊字符，校验所有输入域是否含有特殊符号
 */
function stripscript(s) { 
	var pattern = new RegExp("[`~!@#$^&*()=|{}':;',\\[\\].<>/?~！@#￥……&*（）&mdash;—|{}【】‘；：”“'。，、？]") 
	var rs = ""; 
	for (var i = 0; i < s.length; i++) { 
		rs = rs+s.substr(i, 1).replace(pattern, ''); 
	} 
	return rs; 
}

/**
 * 清除文本框里面的内容
 */
var clear_input = function(c){
	//显示或隐藏删除按钮
	$(c).keyup(function(){
		if($(this).val()==''){
			$(".clear_text").hide();
			$(".phone_address").hide();	
		}else{
			$(c).next($(".clear_text")).show();
		}
	});
	//清楚文本框内容，并获得焦点
	$(".clear_text").on("click", function(){
		$(this).hide().prev().val('').focus();
		if($(this).next().hasClass('phone_address')){
			$(".phone_address").hide();		
		}
	});
}

/**
 * 根据手机号码查询地区和运营商
 */
var phone_address = function(n){
	var reg = /^1[3578]\d{9}$/;//手机号码正则
	var num = trims(n.value);
	if(reg.test(num)){
		var url = 'http://v.showji.com/Locating/showji.com2016234999234.aspx?output=json&m='+num;
		$.ajax({
			type: "get",
		 	url: url,
			dataType: "jsonp",
		 	jsonp: "callback",
		 	success: function(data){
				console.log(data);
				if(data.QueryResult=='True'){
					$(".phone_address").html(data.Province+data.City+' '+data.Corp).show();
					var yid=0;
					if(data.Corp=='中国移动'){
						yid=1;
					}else if(data.Corp=='中国联通'){
						yid=2;
					}else if(data.Corp=='中国电信'){
						yid=3;
					}else{
						yid=0;
					}
					$(".pay_h_type .pay_submit").attr('data-yid',yid);
				}else{
					console.log('查询失败，未查询到数据！');
					return false;
				}
		 	},
		 	error:function (){    
     			console.log('服务器错误，查询失败！');
				return false;
		 	}
		});
	}else{
		console.log('手机号码有误或无数据！');
		return false;
	}
}

/**
 * 关闭二级菜单自定义弹出层
 */
var close_pop = function(){
	$(".a_bg").removeClass('visible');
	$(".prev_nav i").removeClass('select');
	$(".prev_nav span").removeClass('t_current');
	$(".sub_nav").slideUp('fast').removeClass('visible');
}


/**
 * 点击数字+1特效
 */
var tips_num = function(e,s,n){
	var $i=$("<b>").text(s+n);
	var x=e.pageX,y=e.pageY;
	$i.css({top:y-20,left:x,position:"absolute",color:"#ff3451","z-index":"99999"});
	$("body").append($i);
	$i.animate({top:y-180,opacity:0,"font-size":"1.4em"},1500,function(){
		$i.remove();
	});
	e.stopPropagation();
}

/**
 * 字符串转换为时间戳
 */
var getDateTimeStamp = function(dateStr) {
    return Date.parse(dateStr.replace(/-/gi,"/"));
}

/**
 * 格式化时间为几分钟前
 */
var jsDateDiff = function(publishTime){       
    var d_minutes,d_hours,d_days;       
    var timeNow = parseInt(new Date().getTime()/1000);       
    var d;       
    d = timeNow - publishTime;       
    d_days = parseInt(d/86400);       
    d_hours = parseInt(d/3600);       
    d_minutes = parseInt(d/60);       
    if(d_days>0 && d_days<4){       
        return d_days+"天前";       
    }else if(d_days<=0 && d_hours>0){       
        return d_hours+"小时前";       
    }else if(d_hours<=0 && d_minutes>0){       
        return d_minutes+"分钟前";       
    }else{       
        var s = new Date(publishTime*1000);       
        // s.getFullYear()+"年";
        return (s.getMonth()+1)+"月"+s.getDate()+"日";       
    }       
}

/**参数说明：
 * 根据长度截取先使用字符串，超长部分追加…
 * str 对象字符串
 * len 目标字节长度
 * 返回值： 处理结果字符串
 */
var cutString = function(str, len) {
	//length属性读出来的汉字长度为1
	if(str.length*2 <= len) {
		return str;
	}
	var strlen = 0;
	var s = "";
	for(var i = 0;i < str.length; i++) {
		s = s + str.charAt(i);
		if (str.charCodeAt(i) > 128) {
			strlen = strlen + 2;
			if(strlen >= len){
				return s.substring(0,s.length-1) + "...";
			}
		} else {
			strlen = strlen + 1;
			if(strlen >= len){
				return s.substring(0,s.length-2) + "...";
			}
		}
	}
	return s;
}

/** 
 * 和PHP一样的时间戳格式化函数 
 * @param  {string} format    格式 
 * @param  {int}    timestamp 要格式化的时间 默认为当前时间 
 * @return {string}           格式化的时间字符串 
 */
function formatDate(format, timestamp){  
    var a, jsdate=((timestamp) ? new Date(timestamp*1000) : new Date());
    var pad = function(n, c){
        if((n = n + "").length < c){
            return new Array(++c - n.length).join("0") + n;
        } else {
            return n;
        }
    };
    var txt_weekdays = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    var txt_ordin = {1:"st", 2:"nd", 3:"rd", 21:"st", 22:"nd", 23:"rd", 31:"st"};
    var txt_months = ["", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]; 
    var f = {
        // Day
        d: function(){return pad(f.j(), 2)},
        D: function(){return f.l().substr(0,3)},
        j: function(){return jsdate.getDate()},
        l: function(){return txt_weekdays[f.w()]},
        N: function(){return f.w() + 1},
        S: function(){return txt_ordin[f.j()] ? txt_ordin[f.j()] : 'th'},
        w: function(){return jsdate.getDay()},
        z: function(){return (jsdate - new Date(jsdate.getFullYear() + "/1/1")) / 864e5 >> 0},
        // Week
        W: function(){
            var a = f.z(), b = 364 + f.L() - a;
            var nd2, nd = (new Date(jsdate.getFullYear() + "/1/1").getDay() || 7) - 1;
            if(b <= 2 && ((jsdate.getDay() || 7) - 1) <= 2 - b){
                return 1;
            } else{
                if(a <= 2 && nd >= 4 && a >= (6 - nd)){
                    nd2 = new Date(jsdate.getFullYear() - 1 + "/12/31");
                    return date("W", Math.round(nd2.getTime()/1000));
                } else{
                    return (1 + (nd <= 3 ? ((a + nd) / 7) : (a - (7 - nd)) / 7) >> 0);
                }
            }
        },
        // Month
        F: function(){return txt_months[f.n()]},
        m: function(){return pad(f.n(), 2)},
        M: function(){return f.F().substr(0,3)},
        n: function(){return jsdate.getMonth() + 1},
        t: function(){
            var n;
            if( (n = jsdate.getMonth() + 1) == 2 ){
                return 28 + f.L();
            } else{
                if( n & 1 && n < 8 || !(n & 1) && n > 7 ){
                    return 31;
                } else{
                    return 30;
                }
            }
        },
        // Year
        L: function(){var y = f.Y();return (!(y & 3) && (y % 1e2 || !(y % 4e2))) ? 1 : 0},
        //o not supported yet
        Y: function(){return jsdate.getFullYear()},
        y: function(){return (jsdate.getFullYear() + "").slice(2)},
        // Time
        a: function(){return jsdate.getHours() > 11 ? "pm" : "am"},
        A: function(){return f.a().toUpperCase()},
        B: function(){
            // peter paul koch:
            var off = (jsdate.getTimezoneOffset() + 60)*60;
            var theSeconds = (jsdate.getHours() * 3600) + (jsdate.getMinutes() * 60) + jsdate.getSeconds() + off;
            var beat = Math.floor(theSeconds/86.4);
            if (beat > 1000) beat -= 1000;
            if (beat < 0) beat += 1000;
            if ((String(beat)).length == 1) beat = "00"+beat;
            if ((String(beat)).length == 2) beat = "0"+beat;
            return beat;
        },
        g: function(){return jsdate.getHours() % 12 || 12},
        G: function(){return jsdate.getHours()},
        h: function(){return pad(f.g(), 2)},
        H: function(){return pad(jsdate.getHours(), 2)},
        i: function(){return pad(jsdate.getMinutes(), 2)},
        s: function(){return pad(jsdate.getSeconds(), 2)},
        //u not supported yet
        // Timezone
        //e not supported yet
        //I not supported yet
        O: function(){
            var t = pad(Math.abs(jsdate.getTimezoneOffset()/60*100), 4);
            if (jsdate.getTimezoneOffset() > 0) t = "-" + t; else t = "+" + t;
            return t;
        },
        P: function(){var O = f.O();return (O.substr(0, 3) + ":" + O.substr(3, 2))},
        //T not supported yet
        //Z not supported yet
        // Full Date/Time
        c: function(){return f.Y() + "-" + f.m() + "-" + f.d() + "T" + f.h() + ":" + f.i() + ":" + f.s() + f.P()},
        //r not supported yet
        U: function(){return Math.round(jsdate.getTime()/1000)}
    };
    return format.replace(/[\\]?([a-zA-Z])/g, function(t, s){
        if( t!=s ){
            // escaped
            ret = s;
        } else if( f[s] ){
            // a date function exists
            ret = f[s]();
        } else{
            // nothing special
            ret = s;
        }
        return ret;
    }); 
}
/**
 * 时间转换为unix 时间格式
 * @param {Object} datetime
 */
function datetime_to_unix(datetime){
    var tmp_datetime = datetime.replace(/:/g,'-');
    tmp_datetime = tmp_datetime.replace(/ /g,'-');
    var arr = tmp_datetime.split("-");
    var now = new Date(Date.UTC(arr[0],arr[1]-1,arr[2],arr[3]-8,arr[4],arr[5]));
    return parseInt(now.getTime()/1000);
}

/**
 * 会员等级计算
 */
var level = function (num){
	if(num){
		if(num==0){
			return 0;
		}else if(1<=num && num<=10){	/*1-10级*/
			return 1;
		}else if(11<=num && num<=20){
			return 2;
		}else if(num>=21 && num<=30){
			return 3;
		}else if(31<=num && num<=40){
			return 4;
		}else if(41<=num && num<=50){
			return 5;
		}else if(51<=num && num<=60){
			return 6;
		}else if(61<=num && num<=70){
			return 7;
		}else if(71<=num && num<=80){
			return 8;
		}else if(81<=num && num<=90){
			return 9;
		}else if(91<=num && num<=100){
			return 10;
		}else if(101<=num && num<=150){/*11-20级*/
			return 11;
		}else if(151<=num && num<=200){
			return 12;
		}else if(201<=num && num<=250){
			return 13;
		}else if(251<=num && num<=300){
			return 14;
		}else if(301<=num && num<=350){
			return 15;
		}else if(351<=num && num<=400){
			return 16;
		}else if(401<=num && num<=450){
			return 17;
		}else if(451<=num && num<=500){
			return 18;
		}else if(501<=num && num<=550){
			return 19;
		}else if(551<=num && num<=600){
			return 20;
		}else if(601<=num && num<=650){/*21-30级*/
			return 21;
		}else if(651<=num && num<=700){
			return 22;
		}else if(701<=num && num<=750){
			return 23;
		}else if(751<=num && num<=800){
			return 24;
		}else if(801<=num && num<=850){
			return 25;
		}else if(851<=num && num<=900){
			return 26;
		}else if(901<=num && num<=950){
			return 27;
		}else if(951<=num && num<=1000){
			return 28;
		}else if(1001<=num && num<=1500){
			return 29;
		}else if(1501<=num && num<=2000){
			return 30;
		}else if(2001<=num && num<=2500){/*31-40级*/
			return 31;
		}else if(2501<=num && num<=3000){
			return 32;
		}else if(3001<=num && num<=3500){
			return 33;
		}else if(3501<=num && num<=4000){
			return 34;
		}else if(4001<=num && num<=4500){
			return 35;
		}else if(4501<=num && num<=5000){
			return 36;
		}else if(5001<=num && num<=5500){
			return 37;
		}else if(5501<=num && num<=6000){
			return 38;
		}else if(6001<=num && num<=6500){
			return 39;
		}else if(6501<=num && num<=7000){
			return 40;
		}else if(7001<=num && num<=7500){/*41-50级*/
			return 41;
		}else if(7501<=num && num<=8000){
			return 42;
		}else if(8001<=num && num<=8500){
			return 43;
		}else if(8501<=num && num<=9000){
			return 44;
		}else if(9001<=num && num<=9500){
			return 45;
		}else if(9501<=num && num<=10000){
			return 46;
		}else if(10001<=num && num<=15000){
			return 47;
		}else if(15001<=num && num<=20000){
			return 48;
		}else if(20001<=num && num<=25000){
			return 49;
		}else if(25001<=num && num<=30000){
			return 50;
		}else if(30001<=num && num<=35000){/*51-60级*/
			return 51;
		}else if(35001<=num && num<=40000){
			return 52;
		}else if(40001<=num && num<=45000){
			return 53;
		}else if(45001<=num && num<=50000){
			return 54;
		}else if(50001<=num && num<=55000){
			return 55;
		}else if(55001<=num && num<=60000){
			return 56;
		}else if(60001<=num && num<=65000){
			return 57;
		}else if(65001<=num && num<=70000){
			return 58;
		}else if(70001<=num && num<=75000){
			return 59;
		}else if(75001<=num && num<=80000){
			return 60;
		}else{
			return 100;
		}	
	}else{
		return 0;
	}
}

/**
 * 纯文本提示信息
 */
var tips = function(text){
	layer.open({
	    content: text,
	    skin: 'msg',
	    time: 2 //2秒后自动关闭
	});
}


/**
 * 评论点赞/踩
 */
var dianzan = function(now,data){
	var loading;
    $.ajax({
        url: ajax_server+'?mod=ajax&act=pl_toupiao',
        data:{data:data},
        dataType: 'jsonp',
        beforeSend: function(){
			loading = layer.open({type: 2});
		},
        success: function(obj){
        	if(obj){
        		if(obj.code==100){
	        		now.html(data.num+1);
	        	}
        	}
        	tips(obj.message);
        },complete: function(){
			layer.close(loading);
		}
    });
}

/**
 * 隐藏评论输入框
 */
var close_comment = function(){
	$(".reply_textarea").attr('placeholder','我来说两句');
	$(".a_bg").removeClass('visible');
	$(".reply_content").hide();
}

/**
 * 显示评论输入框
 */
var show_comment = function(){
	$(".a_bg").addClass('visible');
	$(".reply_content").show();
	$(".reply_textarea").focus();
}

/**
 * 添加评论
 */
var comment = function(data){
	var loading;
    $.ajax({
        url: ajax_server+'?mod=ajax&act=comment',
        data:{data:data},
        dataType: 'jsonp',
        beforeSend: function(){
			loading = layer.open({type: 2});
		},
        success: function(obj){
        	if(obj){
        		if(obj.code==100){
	        		layer.open({
					    content: obj.message,
					    btn: '确定',
					    yes:function(index){
					    	layer.closeAll();
					      	location.reload();
					    }
					});
	        	}else{
	        		tips(obj.message);
	        	}
        	}
        	
        },complete: function(){
			layer.close(loading);
		}
    });
}

/**
 * 正则表达式获取地址栏参数
 */
var GetUrlString = function(name){
     var reg = new RegExp("(^|&)"+ name +"=([^&]*)(&|$)");
     var r = window.location.search.substr(1).match(reg);
     if(r!=null)return  unescape(r[2]); return null;
}

/**
 * 正则表达式获取cookies
 */
var getCookie = function(name){
	var arr,reg=new RegExp("(^| )"+name+"=([^;]*)(;|$)");
	if(arr=document.cookie.match(reg)){
		return unescape(arr[2]);
	}else{
		return null;
	}
}

/**
 * 检查用户名信息是否存在
 */
var check_info = function(type,info){
	var status;
	$.ajax({
		type:"post",
		dataType:'json',
		data:{type:type,info:info},
		url:"api/check_info",
		async:false,
		success:function(data){
			if(data){
				if(data.code==1){
					status = true;
				}else{
					status = false;
				}
			}
		}
	});
	return status;
}

/**
 * 发送手机验证码倒计时通用函数
 * class类 send_code
 */
var sends = {
	countdown:60,
	send_code:function(obj) { 
	    if(sends.countdown == 0) { 
	        $(obj).attr("disabled",false);
	        $(obj).css("background-color","#13aeee");
	        $(obj).val("重新获取"); 
	        sends.countdown = 60; 
	        return;
	    } else { 
	        $(obj).attr("disabled", true);
	        $(obj).css("background-color","#b1b6b1");
	        $(obj).val("剩余 "+ sends.countdown + " 秒"); 
	        sends.countdown--; 
	    } 
		setTimeout(function() {sends.send_code(obj)},1000);
	}
}

/**
 * 发送手机验证码通用函数
 * div class类 send_code
 * 调用  onclick="send_code(this);"
 */
var send_code = function(obj){
	var mobile = $.trim($("#mobile").val());
	console.log(mobile);
	var info = $(obj).attr('data-info');
	var type = $(obj).attr('data-type');
	if(mobile == ''){
		tips('请输入手机号码！');
		return false;
	}else if(!/^1[3578]\d{9}$/.test(mobile)){
		layer.open({content: '您输入的手机号码有误，请检查一下！',btn: '确定'});
		return false;
	}else{
		var loading;
		$.ajax({
			type:"post",
			url:base_url+"api/sendMobileCode",
			dataType:'json',
			data: {type:type,info:info,mobile:mobile},
			success: function(data){//正确
				if(data){
					if(data.code==100){
						sends.send_code(obj);
					}else if(data.code==1){
						layer.open({content: data.message,btn: '确定'});
					}else{
						layer.open({content: '发送失败，请稍后再试或联系网站客服！',btn: '确定'});
					}
				}else{
					layer.open({content: '服务器休假了，技术正在召回，请稍后！',btn: '确定'});
				}
			},beforeSend: function(){//开始
				loading = layer.open({content: '发送中，请稍后...',skin: 'msg',time: 2});
			},complete: function(){//完成
				layer.close(loading);
			},error: function(){//错误
				layer.open({content: '服务器休假了，技术正在召回，请稍后！',btn: '确定'});
			}
		});
	}
}

/**
 * 添加收藏/取消收藏
 */
var shoucang = function(type,gid,gurl,num,uid,name){
	var data = {'type':type,'gid':gid,'url':gurl,'num':num,'uid':uid,'ddusername':name};
	var loading;
	$.ajax({
		type:"post",
		url: ajax_server+'?mod=ajax&act=shoucang',
		dataType:'jsonp',
		data: {data:data},
		success: function(data){//正确
			if(data){
				if(data.code==100){
					tips(data.message);
				}else{
					layer.open({content: data.message,btn: '确定'});
				}
			}else{
				layer.open({content: '服务器休假了，技术正在召回，请稍后！',btn: '确定'});
			}
		},beforeSend: function(){//开始
			loading = layer.open({content: '提交中，请稍后...',skin: 'msg',time: 2});
		},complete: function(){//完成
			layer.close(loading);
		},error: function(){//错误
			layer.open({content: '服务器休假了，技术正在召回，请稍后！',btn: '确定'});
		}
	});
}

/**
 * js乘法 算出很多小数解决方案，达到精确计算
 */
var accMul = function(arg1, arg2) {
    var m = 0,
        s1 = arg1.toString(),
        s2 = arg2.toString(),
        t;
 
    t = s1.split(".");
    // 判断有没有小数位，避免出错
    if (t[1]) {
        m += t[1].length
    }
 
    t = s2.split(".");
    if (t[1]) {
        m += t[1].length
    }
 
    return Number(s1.replace(".", "")) * Number(s2.replace(".", "")) / Math.pow(10, m)
}

/**
 * 手机号码、邮箱中间加*号
 */
var encrypt_ep = function(n){
	var d;
	if(/^1[3578]\d{9}$/.test(n)){
		d = n.replace(/^(\d{3})\d{4}(\d+)/,"$1****$2");
	}else if(/^(\w-*\.*)+@(\w-?)+(\.\w{2,})+$/.test(n)){
		var c=n.split("@");
 	  	var c1=c[0].substr(3);
 	  	var c2=c[0].substr(-3);
 	  	var xing="****";
 	  	d = c[0].substr(0,3)+xing+c2+'@'+c[1];
	}else{
		d = n;
	}
	return d;
}

/**
 * 格式化银行卡信息
 */
var bank_code = function(t){
	var c = t.split("|");
	
	var b = c[1].substr(-4);
	return c[0]+'('+b+')';
}

function DateAddORSub(interval,type,number)  
{  
/* 
 * 功能:实现Script的Date加减功能. 
 * 参数:interval,字符串表达式，表示要添加的时间间隔. 
 * 参数:number,数值表达式，表示要添加的时间间隔的个数. 
 * 参数:type,加减类型. 
 * 返回:新的时间对象. 
 * var newDate =DateAddORSub("d","+",5); 
 */  
  var date = new Date();  
    switch(interval)  
    {  
        case "y" : {  
            if(type=="+"){  
             date.setFullYear(date.getFullYear()+number);  
            }else{  
             date.setFullYear(date.getFullYear()-number);  
            }  
            return date;  
            break;  
        }  
        case "q" : {  
            if(type=="+"){  
            date.setMonth(date.getMonth()+number*3);  
            }else{  
             date.setMonth(date.getMonth()-number*3);  
            }  
            return date;  
            break;  
        }  
        case "m" : {  
            if(type=="+"){  
             date.setMonth(date.getMonth()+number);  
            }else{  
             date.setMonth(date.getMonth()-number);  
            }  
            return date;  
            break;  
        }  
        case "w" : {  
            if(type=="+"){  
            date.setDate(date.getDate()+number*7);  
            }else{  
            date.setDate(date.getDate()-number*7);  
            }  
            return date;  
            break;  
        }  
        case "d" : {  
            if(type=="+"){  
             date.setDate(date.getDate()+number);  
            }else{  
              date.setDate(date.getDate()-number);  
            }  
            return date;  
            break;  
        }  
        case "h" : {  
             if(type=="+"){  
            date.setHours(date.getHours()+number);  
            }else{  
             date.setHours(date.getHours()-number);  
            }  
            return date;  
            break;  
        }  
        case "m" : {  
            if(type=="+"){  
            date.setMinutes(date.getMinutes()+number);  
            }else{  
            date.setMinutes(date.getMinutes()-number);  
            }  
            return date;  
            break;  
        }  
        case "s" : {  
             if(type=="+"){  
            date.setSeconds(date.getSeconds()+number);  
            }else{  
             date.setSeconds(date.getSeconds()-number);  
            }  
            return date;  
            break;  
        }  
        default : {  
             if(type=="+"){  
             date.setDate(d.getDate()+number);  
            }else{  
             date.setDate(d.getDate()-number);  
            }  
            return date;  
            break;  
        }  
    }  
}  
  
function formatDates(date){;  
   var year = date.getFullYear();       //年  
   var month = date.getMonth() + 1;     //月  
   var day = date.getDate();            //日  
   return year+"-"+month+"-"+day;
 }  